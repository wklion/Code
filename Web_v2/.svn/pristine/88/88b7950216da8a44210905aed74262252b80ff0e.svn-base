/**
 * @author: wangkun
 * @date:2017-12-20
 * @description 格点检验评估
 */
function GDJYPageCLass() {
  this._init_();
}
GDJYPageCLass.prototype = {
  constructor: GDJYPageCLass,
  dateSelect1:null,
  dateSelect2:null,
  JYchart:null,
  _init_:function(){
    this.name = "检点检验";
  },
  renderMenu:function(){
    var me = this;
    $("#map_div").hide();
    $("#content").append(`
      <div id="jyChart_div">
        <div id="JY_Condition">
          <span>条件：</span><div id="dateSelect1"></div><span>到</span><div id="dateSelect2"></div><span>时次</span>
          <select id="jyTimePar"><option value="08">08</option><option value="20">20</option></select>
          <span>地区</span><select id="jyArea"><option value="all">全省</option></select>
          <span>站点</span><select id="jyStation"><option value="all">全部</option></select>
          <span>图表时效</span><select id="jyHours"><option value="72">72</option><option value="168">168</option><option value="240">240</option></select>
          <span>地图时效</span><select id="jyHourSpan"><option value="24">24</option><option value="48">48</option><option value="72">72</option><option value="96">96</option><option value="120">120</option><option value="144">144</option><option value="168">168</option></select>
        </div>
        <div class="overflow">
          <div class="jyElementDiv" id="display"><span class="leftTitle">显示：</span><span class="jyElements active">图表</span><span class="jyElements">地图</span></div>
          <div class="jyElementDiv" id="element"><span class="leftTitle">要素：</span><span class="jyElements active" id="r12">日降水</span><span class="jyElements" id="10uv">风</span><span class="jyElements" id="2t">气温</span><span class="jyElements" id="tmax">日最高温度</span><span class="jyElements" id="tmin">日最低温度</span></div>
          <div class="jyElementDiv" id="method"><span class="leftTitle">方法：</span><span class="jyElements active" value="devia">绝对平均误差</span><span class="jyElements" value="deviaSq">均方根误差</span><span class="jyElements" value="correct1">≤1℃准确率</span><span class="jyElements" value="correct2">≤2℃准确率</span></div>
        </div>
        <div class="jyTable">
          <div class="echartsBox" id="jyChart"></div>
          <div class="ybjyChart"></div>
        </div>
      </div>
    `);
    me.dateSelect1 = new DateSelecter(2,2);
    me.dateSelect1.intervalMinutes = 60*24; //24小时
    me.dateSelect1.changeHours(-11*24*60);
    $("#dateSelect1").html(me.dateSelect1.div);
    $("#dateSelect1").find("input").css({"width":"95px", border: "1px solid #e8e9eb", height: "28px","padding-left":"5px"});
    $("#dateSelect1").find("img").css("display","none");

    me.dateSelect2 = new DateSelecter(2,2);
    me.dateSelect2.intervalMinutes = 60*24; //24小时
    me.dateSelect2.changeHours(-1*24*60);
    $("#dateSelect2").html(me.dateSelect2.div);
    $("#dateSelect2").find("input").css({"width":"95px", border: "1px solid #e8e9eb", height: "28px","padding-left":"5px"});
    $("#dateSelect2").find("img").css("display","none");

    initRes();
    initEvent();
    load();
    function initRes(){
      me.JYchart = echarts.init($("#jyChart")[0]);
      var option = {
        title:{
          text: ''
        },
        textStyle: {
          color: "white"
        },
        grid: {
          bottom: 20
        },
        legend: {
          data: ['中央台指导', '中央台格点', '省台格点(格点对格点)', '省台格点', '城镇预报','本地MOS1','本地OPS','EC-thin','T639'],
          textStyle: {
            color: "white"
          }
        },
        xAxis: [{
          type: 'category',
          data: ['24','48','72'],
          axisPointer: {
            type: 'shadow'
          }
        }],
        yAxis: [
          {
            type: 'value'
          }
        ],
        series: []
      };
      me.JYchart.setOption(option);
    }
    function initEvent(){

    }
    function load(){
      me.updateGridCheck();
    }
  },
  /**
   * @author:wangkun
   * @date:2017-12-08
   * @modifyDate:
   * @return:
   * @description:更新格点检验查询
   */
  updateGridCheck:function(){
    var me = this;
    var startDate = me.dateSelect1.getCurrentTimeReal();
    var endDate = me.dateSelect2.getCurrentTimeReal();
    var myDate1 = new MyDate();
    startDate = myDate1.convert(startDate);
    var myDate2 = new MyDate();
    endDate = myDate2.convert(endDate);
    var strStartDate = startDate.format("yyyyMMdd");
    var strEndDate = endDate.format("yyyyMMdd");
    var timeLevel = $("#jyTimePar").val();
    var type = $("#method span.active").attr("value");
    var element = $("#element span.active").attr("id");
    if(element == "r12" && type!= "barometer")
      type = type+$("#method span.active").attr("value");
    var param = {
      startTime:strStartDate,
      endTime:strEndDate,
      forecastHour:timeLevel,
      element:element,
      type:type
    };
    var url = gridServiceUrl+"services/ForecastfineService/getGridCheck";
    
    console.log(param);
  }
}
