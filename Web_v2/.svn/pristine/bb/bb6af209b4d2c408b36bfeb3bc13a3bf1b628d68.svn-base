/**
 * @author: wangkun
 * @date:2017-12-07
 * @description 首页
 */
function Home() {
    this.renderMenu();
    this._init_();
}

Home.prototype = {
    constructor: Home,
    liveChart: null,
    tenMChart: null,//10分钟图表
    testChart: null,//检验图表
    task: [],//任务表
    loadType: "DLHome",
    renderMenu() {
        var me = this;
        me.name = "首页";
        $("#content").html(`
            <div class="home" id="home">
                <div id="left_div" class="left_div">
                    <div id="weatherInfo" class="weatherInfo">
                        <div class="head">
                            <div class="curPos">
                                <span class="headCaption">兰州市</span>
                                <span class="location"></span>
                                <span id="curTime">18:11</span>
                                <span>实况</span>
                            </div>
                            <div class="dataFrom">
                                <span>08:00更新</span>
                                <span>数据来源 兰州中心台</span>
                            </div>
                        </div>
                        <div class="live">
                            <div class="curWeather">
                                <div class="live_temp"><i class="tempIcon"></i><span>?</span></div>
                                <div class="liveOther">
                                    <div id="live_humidity"><i class="humidityIcon"></i><span>相对湿度</span><span>?</span></div>
                                    <div id="live_wind"><i class="windIcon"></i><span>东北风</span><span>2级</span></div>
                                    <div id="live_AQI"><i class="airIcon"></i><span>94</span><span>良</span></div>
                                    <div id="live_car"><i class="carIcon"></i><span>限行</span><span>5和0</span></div>
                                </div>
                            </div>
                            <div class="dayAndNight">
                                <div class="p16">20日白天</div>
                                <div class="p36"><i class="dayPhenomena"></i></div>
                                <div class="p16">晴</div>
                                <div class="p16" id="dayTemp">26℃</div>
                                <div class="p16">微风</div>
                            </div>
                            <div class="dayAndNight">
                                <div class="p16">20日夜间</div>
                                <div class="p36"><i class="nightPhenomena"></i></div>
                                <div class="p16">晴</div>
                                <div class="p16" id="nightTemp">11℃</div>
                                <div class="p16">微风</div>
                            </div>
                        </div>
                        <div class="cur_live">
                            <div class="normal_row"><span>08时</span><span>11时</span><span>14时</span><span>17时</span><span>20时</span><span>23时</span><span>02时</span><span>05时</span></div>
                            <div class="normal_row"><span class="dayPhenomena"></span><span class="dayPhenomena"></span><span class="dayPhenomena"></span><span class="dayPhenomena"></span><span class="dayPhenomena"></span><span class="dayPhenomena"></span><span class="dayPhenomena"></span><span class="dayPhenomena"></span></div>
                            <div id="live_chart" class="live_chart"></div>
                            <div class="normal_row"><span>微风</span><span>微风</span><span>微风</span><span>微风</span><span>微风</span><span>微风</span><span>微风</span><span>微风</span></div>
                            <div class="normal_row"><span><3级</span><span><3级</span><span><3级</span><span><3级</span><span><3级</span><span><3级</span><span><3级</span><span><3级</span></div>
                        </div>
                    </div>
                    <div id="dutyInfo" class="dutyInfo">
                        <div class="headInfo">
                            <span class="headCaption">值班人员</span>
                            <span class="title_right" id="dutyDate">2017/12/06 星期三</span>
                        </div>
                        <div class="duty-detail">
                            <table class="table table-bordered">
                                <thead>
                                    <tr><th>姓名</th><th>岗位</th><th>电话</th><th>科室</th></tr>
                                </thead>
                                <tbody>
                                    <tr><td>王某某</td><td>值班岗</td><td>1300000000000</td><td>短临科</td></tr>
                                    <tr><td>李某某</td><td>首席岗</td><td>1310000000000</td><td>短临科</td></tr>
                                    <tr><td>张某某</td><td>值班岗</td><td>1320000000000</td><td>短临科</td></tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div id="strongWeather" class="strongWeather">
                        <div class="headInfo">
                            <span class="headCaption">实况统计分析</span>
                        </div>
                        <div class="statHourspan">2017年12月7日14时至2017年12月8日14时</div>
                        <div id="sw_stat">
                            <table class="table table-bordered">
                                <thead>
                                    <tr><th>类型</th><th>站次</th><th>最强</th><th>出现时间</th></tr>
                                </thead>
                                <tbody>
                                   
                                </tbody>
                            </table>
                        </div>
                        <div id="sw_detail">
                            <table class="table table-bordered">
                                <thead>
                                    <tr><th>要素</th><th>站点个数</th><th>时间</th><th>站点</th><th>值</th></tr>
                                </thead>
                                <tbody>
                                  <!--  <tr><td>大风</td><td>2</td><td>瓜州榆林千佛洞</td><td>6月12日</td><td>18.3</td></tr>
                                    <tr><td>短时强降水</td><td>5</td><td>华家岭(35.2)</td><td>6月12日</td><td>18.3</td></tr>
                                    <tr><td>短时强降水</td><td>5</td><td>华家岭(35.2)</td><td>6月12日</td><td>18.3</td></tr>
                                    <tr><td>短时强降水</td><td>5</td><td>华家岭(35.2)</td><td>6月12日</td><td>18.3</td></tr>
                                    <tr><td>短时强降水</td><td>5</td><td>华家岭(35.2)</td><td>6月12日</td><td>18.3</td></tr>
                                    <tr><td>短时强降水</td><td>5</td><td>华家岭(35.2)</td><td>6月12日</td><td>18.3</td></tr>
                                    <tr><td>短时强降水</td><td>5</td><td>华家岭(35.2)</td><td>6月12日</td><td>18.3</td></tr>-->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div id="right_div" class="right_div">
                    <div class="imgProduct" id="imgProduct">
                    </div>
                    <div class="chartProduct" id="chartProduct">
                    </div>
                </div>
                <div id="imgBox" class="imgBox"><div id="closeImg" class="closeImg">X</div><img src="" alt=""></div>
            </div>
        `);
        let taggleHome = `<span id="DLHome" class="active">短临首页</span>丨<span id="WGHome">网格首页</span>`;
        $(".brand a").eq(1).html(taggleHome);
        // console.log("test");
    },
    _init_: function () {
        var me = this;
        var config = me.getConfig();
        var html = "";
        let modelCount = 0;


        config.imgProduct.forEach(item => {
            var imgSrc = IMGCacheUrl + item.url;
            //根据配置条件判断是否加载
            if (item._enabled && item.type === me.loadType && modelCount < 6) {
                html += '<div class="item" id=' + item.id + '><image src=' + imgSrc + '></image><button class="imgMax"></button><span class="title">' + item.name + '</span></div>';
                modelCount++;
            }
        });
        $("#imgProduct").html(html);
        html = "";
        modelCount = 0;
        config.chartProduct.forEach(item => {
            if (item._enabled && item.type === me.loadType && modelCount < 3) {
                html += '<div class="item" id="' + item.id + '"><div class="chartHead"><span class="headCaption">' + item.name + '</span><span class="headRight">' + item.updateTime + '</span></div><div class="chartBody"></div></div>';
                modelCount++;
            }
        });
        $("#chartProduct").html(html);
        initLiveChart();//初始化表格
        init5MChart();//初始化5分钟实况

        let task_livePrecImg = setInterval(me.updateLivePrecImg(), 1000 * 60);
        me.task.push({
            name: "降水分布图",
            class: task_livePrecImg
        });
        me.updateAlertSingal();
        me.update5MData();//5分钟实况数据
        initTest();//检验
        me.updateTestData();

        me.updateTime();//更新时间
        me.updateCurLive();
        me.updateForecastData();
        me.strongWeatherStatisticAnalysis();

        function initLiveChart() {
            me.liveChart = echarts.init($("#live_chart")[0]);
            var option = {
                title: {
                    text: ''
                },
                grid: {
                    top: 20,
                    bottom: 0,
                    left: '2%',
                    right: '2%'
                },
                xAxis: {
                    type: 'category',
                    boundaryGap: false,
                    data: ['08', '11', '14', '17', '20', '23', '02', '05'],
                    splitLine: {
                        show: false
                    }
                },
                yAxis: {
                    show: true,
                    min: function (value) {
                        return value.min;
                    },
                    splitLine: {
                        show: false
                    }
                    // type: 'value',
                    // axisLabel: {
                    //   formatter: '{value} °C'
                    // }
                },
                series: [
                    {
                        name: '最高气温',
                        type: 'line',
                        data: [11, 11, 15, 13, 12, 13, 10, 8],
                        itemStyle: {
                            normal: {
                                label: {
                                    show: true
                                }
                            }
                        }
                    },
                    {
                        name: '最底气温',
                        type: 'line',
                        data: [10, 10, 13, 12, 11, 11, 9, 7],
                        itemStyle: {
                            normal: {
                                color: "blue",
                                label: {
                                    show: true
                                },
                                lineStyle: {
                                    type: 'dotted'
                                }
                            }
                        }
                    },
                ]
            };
            me.liveChart.setOption(option);
        }

        function init5MChart() {
            if ($("#live5m")[0]) {
                me.tenMChart = echarts.init($("#live5m .chartBody")[0]);
                var option = {
                    legend: {
                        data: ['气温', '降水'],
                        textStyle: {
                            color: "white"
                        }
                    },
                    textStyle: {
                        color: "white"
                    },
                    grid: {
                        bottom: 20
                    },
                    xAxis: [{
                        type: 'category',
                        data: ['08:00', '08:05', '08:10', '08:15', '08:20', '08:25', '08:30', '08:35', '08:40', '08:45', '08:50', "08:55"],
                        axisPointer: {
                            type: 'shadow'
                        }
                    }
                    ],
                    yAxis: [{
                        type: 'value',
                        name: '气温',
                        axisLabel: {
                            formatter: '{value} °C'
                        }
                    }, {
                        type: 'value',
                        name: '降水',
                        axisLabel: {
                            formatter: '{value} ml'
                        }
                    }
                    ],
                    series: [{
                        name: '气温',
                        type: 'line',
                        itemStyle: {
                            normal: {
                                color: "red"
                            }
                        },
                        data: []
                    }, {
                        name: '降水',
                        type: 'bar',
                        yAxisIndex: 1,
                        itemStyle: {
                            normal: {
                                color: "blue"
                            }
                        },
                        data: []
                    },
                    ]
                };
                me.tenMChart.setOption(option);
            }

        }

        function initTest() {
            if ($("#test .chartBody")[0]) {
                me.testChart = echarts.init($("#test .chartBody")[0]);
                var option = {
                    textStyle: {
                        color: "white"
                    },
                    grid: {
                        bottom: 20
                    },
                    legend: {
                        data: ['中央台指导', '省台指导', '城镇预报', '本地mos1', 'ops'],
                        textStyle: {
                            color: "white"
                        }
                    },
                    xAxis: [{
                        type: 'category',
                        data: ['24小时高温预报'],
                        axisPointer: {
                            type: 'shadow'
                        }
                    }],
                    yAxis: [
                        {
                            type: 'value'
                        }
                    ],
                    series: [{
                        name: '中央台指导',
                        type: 'bar',
                        data: [1.4]
                    },
                        {
                            name: '省台指导',
                            type: 'bar',
                            data: [1.8]
                        },
                        {
                            name: '城镇预报',
                            type: 'bar',
                            data: [2.2]
                        },
                        {
                            name: '本地mos1',
                            type: 'bar',
                            data: [1.0]
                        },
                        {
                            name: 'ops',
                            type: 'bar',
                            data: [1.3]
                        }
                    ]
                };
                me.testChart.setOption(option);
            }

        }

        $(".imgMax").on("click", function () {
            let imgSrc = $(this).parent().find("img").attr("src");
            imgBoxWidth = $("#right_div").width();
            imgBoxheight = $("#right_div").height();
            $("#imgBox").css({"width": imgBoxWidth, "height": imgBoxheight});
            $("#imgBox").fadeIn().find("img").attr("src", imgSrc);

            // console.log(imgSrc, imgBoxWidth, imgBoxheight);
        })
        $("#closeImg").on("click", function () {
            $("#imgBox").fadeOut();

        })
    },
    initEvent() {
        var me = this;
        $("#DLHome").click(function (e) {
            //首先清除计时器
            me.clearAllsetInteval();
            e.preventDefault();
            console.log(this);
            $(this).addClass("active").siblings().removeClass("active");

            me.loadType = "DLHome";
            me._init_();
        });
        $("#WGHome").click(function (e) {
            me.clearAllsetInteval();
            e.preventDefault();
            console.log(this);
            $(this).addClass("active").siblings().removeClass("active");
            me.loadType = "WGHome";
            me._init_();
        })
    },
    getConfig: function () {
        var module = {
            imgProduct: [{
                name: "强天气实况",
                id: "live",
                url: "test/live.png",
                _enabled: true,
                type: "DLHome"
            }, {
                name: "葵花红外云图",
                id: "sat",
                url: "Satellite/output.png",
                _enabled: true,
                type: "DLHome"
            }, {
                name: "全省雷达拼图",
                id: "radar",
                url: "pup/output.png",
                _enabled: true,
                type: "DLHome"
            }, {
                name: "降水分布图",
                id: "livePrec",
                url: "test/prec.png",
                _enabled: true,
                type: "DLHome"
            }, {
                name: "预警监控",
                id: "earlyWarning",
                url: "test/earlyWarning.png",
                _enabled: true,
                type: "DLHome"
            }, {
                name: "临近预警",
                id: "nearWarning",
                url: "test/earlyWarning.png",
                _enabled: true,
                type: "DLHome"
            }, {
                name: "测试模块1",
                id: "live",
                url: "test/live.png",
                _enabled: true,
                type: "WGHome"
            }, {
                name: "测试模块2",
                id: "live",
                url: "test/live.png",
                _enabled: true,
                type: "WGHome"
            }, {
                name: "测试模块3",
                id: "live",
                url: "test/live.png",
                _enabled: true,
                type: "WGHome"
            }, {
                name: "测试模块4",
                id: "live",
                url: "test/live.png",
                _enabled: true,
                type: "WGHome"
            }, {
                name: "测试模块5",
                id: "live",
                url: "test/live.png",
                _enabled: true,
                type: "WGHome"
            }, {
                name: "测试模块6",
                id: "live",
                url: "test/live.png",
                _enabled: true,
                type: "WGHome"
            }],
            chartProduct: [{
                name: "预警信号",
                id: "alertSignal",
                updateTime: "更新日期：17-12-07 15:36",
                _enabled: true,
                type: "DLHome"
            }, {
                name: "5分钟实况",
                id: "live5m",
                updateTime: "更新日期：17-12-07 15:36",
                _enabled: true,
                type: "DLHome"
            }, {
                name: "检验评估",
                id: "test",
                updateTime: "",
                _enabled: true,
                type: "WGHome"
            }]
        };
        return module;
    },
    /**
     * @author:wangkun
     * @date:2017-12-08
     * @modifyDate:
     * @return:
     * @description:获取预警信号
     */
    getAlertSingal: function (recall) {
        var me = this;
        let url = gsDataService + "services/DBService/getSignalGtDataByTimes";
        var now = new MyDate();
        if(IsDEBUG){
            now = new MyDate(2017,9,5,0,0,0);
        }
        var strEndDateTime = now.format("yyyy-MM-dd hh:mm:00");
        now = now.addDays(-3);
        var strStartDateTime = now.format("yyyy-MM-dd hh:mm:00");
        var param = {
            startTime: strStartDateTime,
            endTime: strEndDateTime
        };
        request('POST', url, param).then(function (data) {
            recall(data);
        });
    },
    /**
     * @author:wangkun
     * @date:2017-12-08
     * @modifyDate:
     * @return:
     * @description:更新预警信号
     */
    updateAlertSingal: function () {
        var now = new MyDate();
        let strDate = now.format("yy-MM-dd hh:mm");
        $("#alertSignal .headRight").html("更新时间:" + strDate);
        this.getAlertSingal(function (data) {
            if(data == null || data.length == 0){
                $("#alertSignal .chartBody").html("当前无预警信号!");
                return;
            }
            var html = "<ul>";
            var limit = 9;
            data = data.reverse();
            data.forEach(item => {
                if (limit < 1) {
                    return;
                }
                let title = item.headline;
                var index1 = title.indexOf("发布");
                if (index1 == -1) {
                    index1 = title.indexOf("解除");
                }
                let index2 = title.indexOf("预警");
                let type = title.substring(index1 + 2, index2);
                let strDateTime = item.sendTime;
                let lonDateTime = parseInt(strDateTime);
                let tempDate = new MyDate(lonDateTime);
                var url = "";
                if(IsDEBUG){
                    url = host + "/imgs/WarningIcon/" + type + ".jpg";
                }else{
                    url = host + "/" + webRoot + "/imgs/WarningIcon/" + type + ".jpg";
                }
                strDateTime = tempDate.format("MM月dd日hh时");
                html += "<li>";
                let imgHtml = '<img class="singalImg" src="' + url + '"></img>';
                html += imgHtml;
                html += '<span class="singalTitle">' + title + '</span>';
                html += '<span class="singalTime">' + strDateTime + '</span>';
                html += "</li>";
                limit--;
            });
            html += "</ul>";
            $("#alertSignal .chartBody").html(html);
        });
    },
    /**
     * @author:wangkun
     * @date:2017-12-13
     * @modifyDate:
     * @return:
     * @description:获取5分钟数据
     */
    get5MData: function () {
        var me = this;
        let url = gsDataService + "services/DBService/getOneStationDetail";
        var now = new MyDate();
        let min = now.getMinutes();
        let mMin = min % 10;
        min = min - mMin;
        now.setMinutes(min);
        var strEndDateTime = now.format("yyyyMMddhhmm");
        now = now.addHours(-2);
        var strStartDateTime = now.format("yyyyMMddhhmm");
        var strDate = now.format("yyyyMM");
        var param = {
            ObservTimesStart: strStartDateTime,
            ObservTimesEnd: strEndDateTime,
            stationNum: '52889',
            tableName: 'HIS_REALDATA_' + strDate
        };//兰州测试
        var tempData = [];
        var precData = [];
        var timeData = [];
        request('POST', url, param).then(function (data) {
            data.forEach(item => {
                let precVal = item.Precipitation;
                let tempVal = item.DryBulTemp;
                tempData.push(tempVal);
                precData.push(precVal);
                let strH = item.ObservTimes.substring(8, 10);
                let strM = item.ObservTimes.substring(10, 12);
                let strHM = strH + ":" + strM;
                timeData.push(strHM);
            });
            var option = me.tenMChart.getOption();
            option.xAxis[0].data = timeData;
            option.series[0].data = tempData;
            option.series[1].data = precData;
            me.tenMChart.setOption(option);
        });
    },
    /**
     * @author:wangkun
     * @date:2017-12-13
     * @modifyDate:
     * @return:
     * @description:更新5分钟数据
     */
    update5MData: function () {
        var me = this;
        run();
        let task_update5MData = setInterval(run, 2 * 60 * 1000);
        me.task.push({
            name: "更新5分钟数据",
            class: task_update5MData
        })

        function run() {
            var cimissUtil = new CimissUtil();
            var now = new MyDate();
            var min = now.getMinutes();
            var cha = min % 5;
            min = min - cha;
            now.setMinutes(min);
            now = now.addHours(-9);
            var strStartDateTime = now.format("yyyyMMddhhmm00");
            now = now.addHours(1);
            var strEndDateTime = now.format("yyyyMMddhhmm00");
            cimissUtil.SURF_CHN_MAIN_MIN__StationNum_Times("52889", strStartDateTime, strEndDateTime, function (data) {
                if (data == undefined)
                    return;
                var tempDateTime = now.addHours(8);
                var labels = [];
                var tempData = [];
                data.forEach(item => {
                    var val = item.TEM;
                    tempData.push(val);
                    tempDateTime.addMilliseconds(-5);
                    var strTime = tempDateTime.format("hh:mm");
                    labels.push(strTime);
                });
                labels = labels.reverse();
                var option = me.tenMChart.getOption();
                option.xAxis[0].data = labels;
                option.series[0].data = tempData;
                me.tenMChart.setOption(option);
            });
            cimissUtil.SURF_CHN_PRE_MIN__StationNum_Times("52889", strStartDateTime, strEndDateTime, function (data) {
                if (data == undefined)
                    return;
                var tempDateTime = now.addHours(8);
                var labels = [];
                var precData = [];
                data.forEach(item => {
                    var val = item.TEM;
                    precData.push(val);
                    tempDateTime.addMilliseconds(-5);
                    var strTime = tempDateTime.format("hh:mm");
                    labels.push(strTime);
                });
                labels = labels.reverse();
                var option = me.tenMChart.getOption();
                option.xAxis[0].data = labels;
                option.series[1].data = precData;
                me.tenMChart.setOption(option);
            });
        }

        var now = new MyDate();
        let strDate = now.format("yy-MM-dd hh:mm");
        $("#live5m .headRight").html("更新时间:" + strDate);
    },
    /**
     * @author:wangkun
     * @date:2017-12-13
     * @modifyDate:
     * @return:
     * @description:获取检验数据
     */
    getTestData: function () {
    },
    /**
     * @author:wangkun
     * @date:2017-12-13
     * @modifyDate:
     * @return:
     * @description:更新检验数据
     */
    updateTestData: async function () {
        var me = this;
        let url = gridServiceUrl + "services/ForecastfineService/getGridCheck";
        var param = {
            startTime: '17092008',
            endTime: '17093008',
            forecastHour: '08',
            element: 'tmax',
            type: 'devia'
        };
        var mapResult = new Map();
        request('POST', url, param).then(function (data) {
            data.forEach(item => {
                let productType = item.productType;
                let val = item.value;
                let tempVal = mapResult.get(productType);
                if (tempVal == undefined) {
                    mapResult.set(productType, val);
                }
                else {
                    let avg = (val + tempVal) / 2;
                    mapResult.set(productType, avg);
                }
            });
            var legendData = [];
            var vals = [];
            mapResult.forEach((val, key) => {
                legendData.push(key);
                vals.push(val);
            });
            var option = me.testChart.getOption();
            //option.legend = [];
            option.legend[0].data = legendData;
            let valSize = vals.length;
            option.series = [];
            for (var i = 0; i < valSize; i++) {
                option.series.push({
                    data: [vals[i]],
                    name: legendData[i],
                    type: 'bar'
                });
            }
            me.testChart.clear();
            me.testChart.setOption(option);
        });
    },
    /**
     * @author:wangkun
     * @date:2017-12-17
     * @modifyDate:
     * @return:
     * @description:更新实况降水数据
     */
    updateLivePrecImg: function () {
        let imgUrl = IMGCacheUrl + "prec/output.png?rnd=" + Math.random();
        $("#livePrec img").attr("src", imgUrl);
    },
    /**
     * @author:wangkun
     * @date:2017-12-19
     * @modifyDate:
     * @return:
     * @description:更新实况时间
     */
    updateTime: function () {
        var me = this;
        var com = new Common();
        updateDuty();
        let task_updateTime = setInterval(function () {
            var now = new MyDate();
            var strTime = now.format("hh:mm");
            $("#curTime").html(strTime);
        }, 1000);
        me.task.push({
            name: "更新实况时间",
            class: task_updateTime
        })
        let task_updateDuty = setInterval(updateDuty, 1000 * 60 * 60);
        me.task.push({
            name: "更新Duty",
            class: task_updateDuty
        })

        function updateDuty() {
            var now = new MyDate();
            var strDate = now.format("yyyy/MM/dd");
            var strWeek = com.getStrWeek(now);
            strDate = strDate + " " + strWeek;
            $("#dutyDate").html(strDate);
        }
    },
    /**
     * @author:wangkun
     * @date:2017-12-19
     * @modifyDate:
     * @return:
     * @description:更新当前实况
     */
    updateCurLive: function () {
        var me = this;
        run();
        let task_updateCurLive = setInterval(run, 2 * 60 * 1000);
        me.task.push({
            name: "更新当前实况",
            class: task_updateCurLive
        })

        function run() {
            var cimissUtil = new CimissUtil();
            var now = new MyDate();
            var min = now.getMinutes();
            var cha = min % 5;
            min = min - cha;
            now.setMinutes(min);
            now = now.addHours(-8);
            var strDateTime = now.format("yyyyMMddhhmm00");
            cimissUtil.SURF_CHN_OTHER_MIN__StationNum_Time("52889", strDateTime, function (data) {
                if (data == undefined)
                    return;
                var temp = parseFloat(data[0].TEM);
                var rhu = parseInt(data[0].RHU);
                $(".curWeather .live_temp span").html(temp + "℃");
                $("#live_humidity span:last").html(rhu + "%");
                let dayTemp = temp + 2.0;
                dayTemp = dayTemp.toFixed(1);
                $("#dayTemp").html(dayTemp + "℃");//临时

                let nightTemp = temp + 5.0;
                nightTemp = nightTemp.toFixed(1);
                $("#nightTemp").html(nightTemp + "℃");//临时
            });
        }
    },
    /**
     * @author:wangkun
     * @date:2017-12-19
     * @modifyDate:
     * @return:
     * @description:更新预报数据
     */
    updateForecastData: function () {
        var me = this;
        var now = new MyDate();
        var curHR = now.getHours();
        var strDate = now.format("yyyy-MM-dd");
        var makeTime = "";
        if (curHR > 20 && curHR < 24) {//使用当天20时预报数据
            makeTime = strDate + " 16:00:00";
        }
        else if (curHR < 8) {//使用上一天20时预报数据
            now = now.addDays(-1);
            strDate = now.format("yyyy-MM-dd");
            makeTime = strDate + " 16:00:00";
        }
        else {//当天08时预报数据
            makeTime = strDate + " 08:00:00";
        }
        var param = {
            departCode: "62",
            productId: "3",
            type: "prvn",
            stationType: "1",
            makeTime: makeTime,
            postType: "p",
            elements: [{
                name: "tmax",
                element: "tmax",
                hourSpan: 24,
                statistic: "none",
                hourSpans: [3, 6, 9, 12, 15, 18, 21, 24]
            }, {
                name: "tmin",
                element: "tmin",
                hourSpan: 24,
                statistic: "none",
                hourSpans: [3, 6, 9, 12, 15, 18, 21, 24]
            }]
        };
        var url = gridServiceUrl + "services/GridService/grid2station";
        request('POST', url, param).then(function (data) {
            if (data == undefined || data.items.length == 0) {
                return;
            }
            var tmax = data.items[0].datas.slice(0, 8);
            var tmin = data.items[1].datas.slice(0, 8);
            var option = me.liveChart.getOption();
            me.liveChart.clear();
            option.series[0].data = tmax;
            option.series[1].data = tmin;
            me.liveChart.setOption(option);
        });
    },
//清除所有计时器
    clearAllsetInteval: function () {
        let me = this;
        console.log(me.task)
        me.task.forEach(function (item) {
            clearInterval(item.class);
        });
        me.task = [];
    },
    //强对流天气实况统计分析
    strongWeatherStatisticAnalysis() {
        let cimissData = new CimissUtil();
        cimissData.SURF_CHN_MUL_HOR_Region_Times(function (data) {
            let maxDataHtml = ``;//最强要素


            let strongWeatherData = {}//强天气数据;
            strongWeatherData.df = [];
            strongWeatherData.dq = [];

            let maxWindVal = 0;//大风值
            let maxWindCount = 0;//大风个数
            let maxWindObj = {};//最大风速所在站点数据

            let maxPREVal = 0;//最大降水1
            let maxPRECount = 0;//var短强个数
            let maxPREObj = {};//最大降水量所在站点数据

            data.forEach(function (item) {
                if (item.PRE > maxPREVal) {
                    maxPREVal = item.PRE;
                    maxPREObj = item;
                }
                if (item.WIN_S_Inst_Max > maxWindVal) {
                    maxWindVal = item.WIN_S_Inst_Max;
                    maxWindObj = item;
                }


                if (item.WIN_S_Inst_Max > 17) {
                    maxWindCount++;
                    strongWeatherData.df.push(item);
                }
                if (item.PRE > 20 && item.PRE != "999999") {
                    maxPRECount++;
                    strongWeatherData.dq.push(item);
                }
            });
            if (maxWindCount !== 0) {
                maxDataHtml += `<tr><td>大风</td><td>${maxWindObj.Station_Id_C}</td><td>${maxWindObj.Station_Name}</td><td>6月12日</td></tr>`
            }
            if (maxPRECount !== 0) {
                maxDataHtml += `<tr><td>短时强降水</td><td>${maxPREObj.Station_Id_C}</td><td>${maxPREObj.Station_Name}</td><td>6月12日</td></tr>`
            }
            if (maxWindCount == 0 && maxPRECount == 0) {
                maxDataHtml = "<tr><td colspan='4'>暂无数据</td></tr>";
            }
            $("#sw_stat").find("tbody").html(maxDataHtml);
            let strongHtml_df = ``, strongHtml_dq = ``;
            if (maxWindCount !== 0) {
                strongHtml_df = `<tr><td rowspan="${maxWindCount}">大风</td><td rowspan="${maxWindCount}">${maxWindCount}个</td>`;//强对流天气
                strongWeatherData.df.forEach(function (item) {
                    strongHtml_df += `<td>6月12日</td><td>${item.Station_Name}</td><td>${item.WIN_S_Inst_Max}</td></tr><tr>`
                });
            }
            if (maxPRECount !== 0) {
                strongHtml_dq = `<tr><td rowspan="${maxPRECount}">短时强降水</td><td rowspan="${maxPRECount}">${maxPRECount}个</td>`;
                strongWeatherData.dq.forEach(function (item) {
                    strongHtml_dq += `<td>6月12日</td><td>${item.Station_Name}</td><td>${item.PRE}</td></tr><tr>`
                });
                // console.log(strongHtml_df);
            }
            if (maxWindCount == 0 && maxPRECount == 0) {
                strongHtml_dq = "<tr><td colspan='5'>暂无数据</td></tr>";
            }
            $("#sw_detail").find("tbody").html(strongHtml_df + strongHtml_dq);


        })
    }
}

