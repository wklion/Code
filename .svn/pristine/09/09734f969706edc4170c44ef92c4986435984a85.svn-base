package com.spd.grid.tool;

import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.io.UnsupportedEncodingException;
import java.util.Calendar;






import org.codehaus.jettison.json.JSONObject;

import com.mg.objects.Dataset;
import com.mg.objects.DatasetVector;
import com.mg.objects.Datasource;
import com.mg.objects.GeoText;
import com.mg.objects.Geometry;
import com.mg.objects.Graphics;
import com.mg.objects.Image;
import com.mg.objects.Layer;
import com.mg.objects.Layout;
import com.mg.objects.Map;
import com.mg.objects.Projection;
import com.mg.objects.Recordset;
import com.mg.objects.Workspace;
import com.spd.grid.domain.Application;

public class ImgUtil {
	String classPath = Thread.currentThread().getContextClassLoader().getResource("").getPath().substring(1);
	public void outputImg(String title,String strMakeTime,String strHourspan,Layer layer) throws Exception{
		Workspace ws = Application.m_workspace;
		ws.LoadSymbol(classPath + "../data/symbol/test_symbol.svg");
		ws.LoadSymbol(classPath + "../data/symbol/test_picture_symbol.svg");
		ws.LoadSymbol(classPath + "../data/symbol/test_symbol_for_line.svg");
		ws.LoadLineSymbol(classPath + "../data/symbol/test_line_symbol.xml");
		ws.LoadSymbol(classPath + "../data/symbol/test_symbol_for_fill.svg");
		ws.LoadFillSymbol(classPath + "../data/symbol/test_fill_symbol.xml");
		
		Point2D ptViewport = new Point2D.Double(1024, 768); 
		Map pMap = new Map();
		ws.InsertMap(pMap, -1);
		pMap.SetName("test");
		pMap.SetSize((int)ptViewport.getX(), (int)ptViewport.getY()); //设备尺寸
		pMap.SetProjection("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs");
		
		addData(ws,pMap,layer);
		//TestRadarBase(ws,pMap);
		
		Calendar cal = Calendar.getInstance();
		String littleTime = DateUtil.format("HHmmss", cal);
		//叠加行政区域
		String adminDivision = "E:/Map/GS/T_ADMINDIV_CITY.shp";
		String alias = "adminDivision"+littleTime;
		String strJson = "{\"Type\":\"ESRI Shapefile\",\"Alias\":\""+alias+"\",\"Server\":\"" + adminDivision + "\"}";
		Datasource dsAdminDivision = ws.OpenDatasource(strJson);
		Dataset adminDivisionDataset = dsAdminDivision.GetDataset(0);
		Layer layerAdminDivision = Layer.CreateInstance("Region", ws);
		layerAdminDivision.SetDataset(adminDivisionDataset);
		layerAdminDivision.SetPropertyValue("LineStyle", "{\"color\":\"RGB(0,0,0)\",\"Width\":2}"); //如果线宽为0，不绘制线
		layerAdminDivision.SetPropertyValue("FillStyle", "{\"ForeColor\":\"RGBA(128,255,0,0)\"}");
                pMap.InsertLayer(layerAdminDivision, -1);
                
                //叠加标注
                Layer pLayer = Layer.CreateInstance("Label", ws);
                pLayer.SetDataset(adminDivisionDataset);
                pLayer.SetPropertyValue("LabelExpression", "Name");
                pLayer.SetPropertyValue("TextStyle", new String("{\"FontName\":\"宋体\",\"Alignment\":\"MiddleCenter\",\"ForeColor\":\"RGB(60,60,60)\",\"FontSize\":3.8,\"Weight\":0.6}".getBytes("UTF-8")));
                pMap.InsertLayer(pLayer, -1);
		
		//创建布局
		Layout pLayout = new Layout();
		ws.InsertLayout(pLayout, -1);
		pLayout.SetName("test");
		Graphics.DotToMM(ptViewport);
		Rectangle2D rc = new Rectangle2D.Double(0.0, 0.0, ptViewport.getX(), -ptViewport.getY()); //高度为负表示y向下
		pLayout.SetBounds(rc); 
		
		//添加地图到布局
		DatasetVector pdv = (DatasetVector)pLayout.GetDatasource().GetDataset(0);
		Recordset rs = pdv.Query(null, null);
		Geometry pg = Geometry.CreateInstance("GeoMap", ws);
		pg.SetBounds(rc);
		pg.SetPropertyValue("MapName", "test");
		rs.AddNew(pg);
		rs.Update();
				
		//添加图例
		Geometry geo = Geometry.CreateInstance("GeoLegend", ws);
		geo.SetOrigin(2, Math.abs(rc.getMaxY()) - 2);
		geo.SetPropertyValue("Alignment", "BottomLeft");
		geo.SetPropertyValue("BackgroundStyle", "{\"ForeColor\":\"RGBA(255,255,255,255)\"}");
		geo.SetPropertyValue("BorderStyle", "{\"color\":\"RGB(0,0,0)\",\"Width\":1}");
		geo.SetPropertyValue("Margin", "{\"left\":4,\"right\":4,\"top\":6,\"bottom\":2}"); //图例边距，单位毫米
		geo.SetPropertyValue("ItemInterval", "2 0"); //图例项列行间距，单位毫米
		geo.SetPropertyValue("ItemTextStyle", new String("{\"FontName\":\"宋体\",\"Alignment\":\"MiddleLeft\",\"ForeColor\":\"RGB(0,0,0)\",\"FontSize\":3.8}".getBytes("UTF-8"))); //尺寸单位为毫米
		
		//添加图例项
		String[] levelName = {"风险等级很高","风险高","风险较高","有一定风险"};
		String[] levelColor = {"RGBA(255,0,0,255)","RGBA(255,127,39,255)","RGBA(255,255,0,255)","RGBA(0,0,255,255)"};
		for(int i=0;i<4;i++){
			String curLevelName = levelName[i];
			String curLevelColor = levelColor[i];
			String str = String.format("{\"Type\":\"Region\",\"Caption\":\"%s\",\"FillStyle\":{\"ForeColor\":\"%s\"}}",curLevelName, curLevelColor);
			str = new String(str.getBytes("UTF-8"));
			geo.AddPropertyValue("LegendItem", str);
		}
		rs.AddNew(geo);
		rs.Update();
		
		//增加标题
		GeoText pGeoText = new GeoText(title);
		pGeoText.SetOrigin(rc.getX() + rc.getWidth() / 2, 5);
		pGeoText.SetPropertyValue("TextStyle", "{\"FontName\":\"宋体\",\"Alignment\":\"TopCenter\",\"FontSize\":8}"); //尺寸单位为毫米
		rs.AddNew(pGeoText);
		rs.Update();
			//副标题(制作时间)
		String subTitle = strMakeTime+"(时效:"+strHourspan+")";
		pGeoText = new GeoText(subTitle);
		pGeoText.SetOrigin(rc.getX() + rc.getWidth() / 2, 15);
		pGeoText.SetPropertyValue("TextStyle", "{\"FontName\":\"宋体\",\"Alignment\":\"TopCenter\",\"FontSize\":6}"); //尺寸单位为毫米
		rs.AddNew(pGeoText);
		rs.Update();
                pGeoText.Destroy();
                
                rs.Destroy();
		
		pLayout.Draw();
		Image image = pLayout.GetGraphics().GetImage(); 
		String filePath = "C:/Users/lenovo/Desktop/temp/"+title+".png";
		image.Save(filePath);
		System.out.println("Over");
	}
	private void addData(Workspace pws, Map pMap,Layer layer){
		/*Layer pLayer = Layer.CreateInstance("Region", pws);
		pLayer.SetDataset(dv);
		pLayer.SetPropertyValue("LineStyle", "{\"color\":\"RGB(255,0,0)\",\"Width\":1}"); //如果线宽为0，不绘制线
		pLayer.SetPropertyValue("FillStyle", "{\"ForeColor\":\"RGBA(255,0,0,255)\"}");*/
		pMap.InsertLayer(layer, -1);
		/*String file = "E:/GS/Data/Disaster/riveRegion.shp";
		String strJson = "{\"Type\":\"ESRI Shapefile\",\"Alias\":\"riveRegion\",\"Server\":\"" + file + "\"}";
		Datasource pds = pws.OpenDatasource(strJson);
		Dataset pDataset = pds.GetDataset(0);
		Layer pLayer = Layer.CreateInstance("Region", pws);
		pLayer.SetDataset(pDataset);
		pLayer.SetPropertyValue("LineStyle", "{\"color\":\"RGB(255,0,0)\",\"Width\":1}"); //如果线宽为0，不绘制线
		pLayer.SetPropertyValue("FillStyle", "{\"ForeColor\":\"RGBA(255,0,0,255)\"}");
		pMap.InsertLayer(pLayer, -1);*/
		Rectangle2D rc = layer.GetDataset().GetBounds();
		pMap.SetBounds(rc);
	}
	private void TestRadarBase(Workspace pws, Map pMap){
		String file = "E:/component/MGObjectsDotNet_64_x64_win_v1.0.0.37/Data/RadarBase/Z_RADR_I_Z9531_20160623060000_O_DOR_SA_CAP.bin";
		String strJson = "{\"Type\":\"RadarBase\",\"Alias\":\"RadarBaseTest\",\"Server\":\""+file+"\"}"; //CC1
		Datasource pds = pws.OpenDatasource(strJson);
		Dataset pDataset = null;
		for (int i = 0; i < pds.GetDatasetCount(); i++){
			String strName = pds.GetDataset(i).GetName();
			if (pDataset == null){
				if (strName.contains("R"))
					pDataset = pds.GetDataset(i);
			}
		}
		Layer pLayer = Layer.CreateInstance("RasterRange", pws);
		pLayer.SetDataset(pDataset);
		pMap.InsertLayer(pLayer, -1);
		Rectangle2D rc = pDataset.GetBounds();
		if (pDataset.GetProjection() != pMap.GetProjection()){
			Projection.Transform(pDataset.GetProjection(), pMap.GetProjection(), rc);
		}
		pMap.SetBounds(rc);
	}
}
